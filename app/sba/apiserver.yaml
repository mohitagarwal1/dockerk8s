apiVersion: v1
kind: Service
metadata:
  labels:
    app: apiserver
  name: apiserver
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 8080
  selector:
    app: apiserver
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: apiserver
  name: apiserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apiserver
  strategy: {}
  template:
    metadata:
      labels:
        app: apiserver
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - frontend
              topologyKey: 'kubernetes.io/hostname'
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app: apiserver
      containers:
        - image: mohitagarwall/sba-apiserver:sqsses
          name: apiserver
          resources: {}
          env:
            - name: spring.datasource.url
              value: jdbc:postgresql://postgres:5432/app
            - name: spring.datasource.username
              value: postgres
            - name: spring.datasource.password
              value: postgres
status: {}
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   labels:
#     app: apiserver
#   name: apiserver
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: apiserver
#   template:
#     metadata:
#       labels:
#         app: apiserver
#       annotations:
#         prometheus.io/scrape: "true"
#         prometheus.io/port: "8888"
#         prometheus.io/path: /actuator/prometheus
#     spec:
#       volumes:
#       - name: elastic-apm-agent
#         emptyDir: {}
#       initContainers:
#       - name: elastic-java-agent
#         image: docker.elastic.co/observability/apm-agent-java:1.12.0
#         volumeMounts:
#         - mountPath: /elastic/apm/agent
#           name: elastic-apm-agent
#         command: ['cp', '-v', '/usr/agent/elastic-apm-agent.jar', '/elastic/apm/agent']
#       containers:
#       - image: jkplayground/smartbank-api-module:observability-v1.0.0
#         name: sba-apiserver
#         imagePullPolicy: Always
#         volumeMounts:
#         - mountPath: /elastic/apm/agent
#           name: elastic-apm-agent
#         env:
#           - name: spring.datasource.url
#             value: jdbc:postgresql://postgres:5432/app
#           - name: spring.application.name
#             value: apiserver-omega
#           - name: server.port
#             value: "8080"
#           - name: ELASTIC_APM_SERVER_URL
#             valueFrom:
#               configMapKeyRef:
#                 name: app-config
#                 key: ELASTIC_APM_SERVER_URL
#           - name: ELASTIC_APM_APPLICATION_PACKAGES
#             valueFrom:
#               configMapKeyRef:
#                 name: app-config
#                 key: ELASTIC_APM_APPLICATION_PACKAGES
#           - name: ELASTIC_APM_SERVICE_NAME
#             value: "apiserver-omega"
#           - name: ELASTIC_APM_ENVIRONMENT
#             value: prod
#           - name: ELASTIC_APM_LOG_LEVEL
#             value: DEBUG
#           - name: JAVA_TOOL_OPTIONS
#             value: -javaagent:/elastic/apm/agent/elastic-apm-agent.jar
#           - name: management.endpoints.web.exposure.include
#             value: "*"
#           - name: management.server.port
#             value: "8888"
#           - name: management.metrics.web.server.request.autotime.enabled
#             value: "true"
#           - name: management.metrics.tags.application
#             value: apiserver-mohit
